{"ast":null,"code":"var _jsxFileName = \"/workspace/react-netflix-clone/src/components/Nav.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./Nav.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Nav() {\n  _s();\n  const [show, setShow] = useState(false);\n  const [searchValue, setSearchValue] = useState(\"\");\n  const navigate = useNavigate();\n  useEffect(() => {\n    window.addEventListener(\"scroll\", () => {\n      console.log(\"window.scrollY\", window.scrollY);\n      if (window.scrollY > 50) {\n        setShow(true);\n      } else {\n        setShow(false);\n      }\n    });\n    return () => {\n      window.removeEventListener(\"scroll\", () => {});\n    };\n  }, []);\n  const handleChange = e => {\n    setSearchValue(e.target.value);\n    navigate(`/search?q=${e.target.value}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: `nav ${show && \"nav__black\"} `,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      alt: \"Netflix logo\",\n      src: \"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/170px-Netflix_2015_logo.svg.png\",\n      className: \"nav__logo\",\n      onClick: () => window.location.href = \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: searchValue,\n      onChange: handleChange,\n      className: \"nav__input\",\n      type: \"text\",\n      placeholder: \"\\uC601\\uD654\\uB97C \\uAC80\\uC0C9\\uD574\\uC8FC\\uC138\\uC694.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      alt: \"User logged\",\n      src: \"https://occ-0-4796-988.1.nflxso.net/dnm/api/v6/K6hjPJd6cR6FpVELC5Pd6ovHRSk/AAAABbme8JMz4rEKFJhtzpOKWFJ_6qX-0y5wwWyYvBhWS0VKFLa289dZ5zvRBggmFVWVPL2AAYE8xevD4jjLZjWumNo.png?r=a41\",\n      className: \"nav__avatar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(Nav, \"Ww/MBT2g1O23ypNlDSfPztlsKjU=\", false, function () {\n  return [useNavigate];\n});\n_c = Nav;\nvar _c;\n$RefreshReg$(_c, \"Nav\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","Nav","_s","show","setShow","searchValue","setSearchValue","navigate","window","addEventListener","console","log","scrollY","removeEventListener","handleChange","e","target","value","className","children","alt","src","onClick","location","href","fileName","_jsxFileName","lineNumber","columnNumber","onChange","type","placeholder","_c","$RefreshReg$"],"sources":["/workspace/react-netflix-clone/src/components/Nav.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./Nav.css\";\n\nexport default function Nav() {\n  const [show, setShow] = useState(false);\n  const [searchValue, setSearchValue] = useState(\"\");\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", () => {\n      console.log(\"window.scrollY\", window.scrollY);\n      if (window.scrollY > 50) {\n        setShow(true);\n      } else {\n        setShow(false);\n      }\n    });\n\n    return () => {\n      window.removeEventListener(\"scroll\", () => {});\n    };\n  }, []);\n\n  const handleChange = (e) => {\n    setSearchValue(e.target.value);\n    navigate(`/search?q=${e.target.value}`);\n  };\n\n  return (\n    <nav className={`nav ${show && \"nav__black\"} `}>\n      <img\n        alt=\"Netflix logo\"\n        src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/170px-Netflix_2015_logo.svg.png\"\n        className=\"nav__logo\"\n        onClick={() => (window.location.href = \"/\")}\n      />\n\n      <input\n        value={searchValue}\n        onChange={handleChange}\n        className=\"nav__input\"\n        type=\"text\"\n        placeholder=\"영화를 검색해주세요.\"\n      />\n\n      <img\n        alt=\"User logged\"\n        src=\"https://occ-0-4796-988.1.nflxso.net/dnm/api/v6/K6hjPJd6cR6FpVELC5Pd6ovHRSk/AAAABbme8JMz4rEKFJhtzpOKWFJ_6qX-0y5wwWyYvBhWS0VKFLa289dZ5zvRBggmFVWVPL2AAYE8xevD4jjLZjWumNo.png?r=a41\"\n        className=\"nav__avatar\"\n      />\n    </nav>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,eAAe,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EACvC,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAMW,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACdW,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAE,MAAM;MACtCC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEH,MAAM,CAACI,OAAO,CAAC;MAC7C,IAAIJ,MAAM,CAACI,OAAO,GAAG,EAAE,EAAE;QACvBR,OAAO,CAAC,IAAI,CAAC;MACf,CAAC,MAAM;QACLA,OAAO,CAAC,KAAK,CAAC;MAChB;IACF,CAAC,CAAC;IAEF,OAAO,MAAM;MACXI,MAAM,CAACK,mBAAmB,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC,CAAC;IAChD,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,YAAY,GAAIC,CAAC,IAAK;IAC1BT,cAAc,CAACS,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;IAC9BV,QAAQ,CAAC,aAAaQ,CAAC,CAACC,MAAM,CAACC,KAAK,EAAE,CAAC;EACzC,CAAC;EAED,oBACEjB,OAAA;IAAKkB,SAAS,EAAE,OAAOf,IAAI,IAAI,YAAY,GAAI;IAAAgB,QAAA,gBAC7CnB,OAAA;MACEoB,GAAG,EAAC,cAAc;MAClBC,GAAG,EAAC,iHAAiH;MACrHH,SAAS,EAAC,WAAW;MACrBI,OAAO,EAAEA,CAAA,KAAOd,MAAM,CAACe,QAAQ,CAACC,IAAI,GAAG;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC,eAEF5B,OAAA;MACEiB,KAAK,EAAEZ,WAAY;MACnBwB,QAAQ,EAAEf,YAAa;MACvBI,SAAS,EAAC,YAAY;MACtBY,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC;IAAa;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eAEF5B,OAAA;MACEoB,GAAG,EAAC,aAAa;MACjBC,GAAG,EAAC,kLAAkL;MACtLH,SAAS,EAAC;IAAa;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAAC1B,EAAA,CAjDuBD,GAAG;EAAA,QAGRH,WAAW;AAAA;AAAAkC,EAAA,GAHN/B,GAAG;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}